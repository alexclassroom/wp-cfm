name: Create a Release Candidate

on:
  workflow_dispatch:
  push:
    branches:
      - release

permissions:
  contents: read # for checkout

env:
  ACTION_VERSION: 1
  PHP_VERSION: '8.1'
  COMPOSER_VERSION: '2.7'
  GIT_AUTHOR_NAME: f1builder
  GIT_AUTHOR_EMAIL: support+f1builder@forumone.com
  GIT_COMMITTER_NAME: f1builder
  GIT_COMMITTER_EMAIL: support+f1builder@forumone.com
  ARTIFACTS_REPO: wp-cfm-dist

jobs:
  release:
    name: New Release Candidate

    if: github.repository == 'forumone/wp-cfm'

    runs-on: ubuntu-latest

    # See: https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs#defining-access-for-the-github_token-scopes
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
    # https://github.com/marketplace/actions/checkout
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
          fetch-depth: 0
          # See: https://github.com/semantic-release/semantic-release/issues/2883
          # See: https://stackoverflow.com/a/76550826
          # See: https://github.com/sheerlox/node-cron/blob/main/.github/workflows/release.yml#L28
          persist-credentials: false

    - name: Get Composer Cache Directory
      id: composer-cache
      if: ${{ !env.ACT }}
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    # https://github.com/marketplace/actions/cache
    - name: Cache Composer dependencies
      if: ${{ !env.ACT }}
      uses: actions/cache@v3
      env:
        composer-cache-name: cache-composer
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-build-${{ env.composer-cache-name }}-php${{ env.PHP_VERSION }}-v${{ env.ACTION_VERSION }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.composer-cache-name }}-php${{ env.PHP_VERSION }}-v${{ env.ACTION_VERSION }}-

    # https://github.com/marketplace/actions/setup-node-js-environment
    - name: Setup Node Environment
      uses: actions/setup-node@v2
      with:
        node-version-file: '.nvmrc'

    - name: Get NPM Cache Directory
      id: npm-cache
      if: ${{ !env.ACT }}
      run: echo "::set-output name=dir::$(npm config get cache)"

    - name: Cache Node Modules
      if: ${{ !env.ACT }}
      uses: actions/cache@v2
      env:
        npm-cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-build-${{ env.npm-cache-name }}-v${{ env.ACTION_VERSION }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.npm-cache-name }}-v${{ env.ACTION_VERSION }}-

    - name: Install NPM Dependencies
      run: npm ci

    # https://github.com/marketplace/actions/setup-php-action
    - name: Setup PHP & Composer Environment
      uses: shivammathur/setup-php@v2
      with:
        php-version: "${{ env.PHP_VERSION }}"
        tools: "composer:${{ env.COMPOSER_VERSION }}"

    - name: Install Composer Dependencies
      run: composer install --no-dev --prefer-dist

    - name: Build Release Candidate
      id: build-release-candidate
      # See: https://github.com/semantic-release/semantic-release/blob/master/docs/usage/ci-configuration.md#authentication
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        npm run release
        mkdir -p artifacts/init
        touch artifacts/init/.gitkeep
        unzip /tmp/wp-release/package.zip -d ./artifacts/
        cp composer.json ./artifacts/wp-cfm
        RELEASE_VERSION=$(cat /tmp/wp-release/VERSION)
        echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT

    # https://github.com/marketplace/actions/publish-artifact-to-git
    # Run this without any files as a means to initialize the branch.
    - name: Initialize Release Candidate Branch in Artifact Repository
      id: initialize-release-candidate
      uses: SpinyOwl/publish-artifact-to-git@1.0.1
      env:
        GITHUB_ACTOR: ${{ env.GIT_AUTHOR_NAME }}
      with:
        repository: forumone/${{ env.ARTIFACTS_REPO }}
        branch: release/${{ steps.build-release-candidate.outputs.RELEASE_VERSION }}
        commit_author: ${{ env.GIT_AUTHOR_NAME }}
        github_token: ${{ secrets.GH_TOKEN }}
        github_pat: ${{ secrets.GH_TOKEN }}
        source_folder: artifacts/init

    # https://github.com/marketplace/actions/publish-artifact-to-git
    - name: Publish Release Candidate to Artifact Repository
      id: publish-release-candidate
      uses: SpinyOwl/publish-artifact-to-git@1.0.1
      env:
        GITHUB_ACTOR: ${{ env.GIT_AUTHOR_NAME }}
      with:
        repository: forumone/${{ env.ARTIFACTS_REPO }}
        branch: release/${{ steps.build-release-candidate.outputs.RELEASE_VERSION }}
        commit_author: ${{ env.GIT_AUTHOR_NAME }}
        github_token: ${{ secrets.GH_TOKEN }}
        github_pat: ${{ secrets.GH_TOKEN }}
        source_folder: artifacts/wp-cfm

    # https://github.com/marketplace/actions/string-transform
    - name: Transform Release Candidate Tag
      id: transform-release-candidate-tag
      uses: relab-services/string-transform@v1
      with:
         source: ${{ steps.build-release-candidate.outputs.RELEASE_VERSION }}
         transform: replace(/release\./, "RC")

    # https://github.com/marketplace/actions/pkgdeps-git-tag-action
    - name: Tag Artifact Release
      uses: pkgdeps/git-tag-action@v2
      with:
        github_token: ${{ secrets.GH_TOKEN }}
        github_repo: forumone/${{ env.ARTIFACTS_REPO }}
        git_commit_sha: ${{ steps.publish-release-candidate.outputs.commit_hash }}
        version: ${{ steps.transform-release-candidate-tag.outputs.var }}
